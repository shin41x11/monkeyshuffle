移動及び衝突判定について

・猿
　親オブジェクトにRigidbodyを設定。
　UseGravityをTrueにしてる。
　
　BoxColiderを７つ配置。見た目より大きめ。
　TriggerのみのBoxColiderを両腕に配置。
　木の輪の接触判定のみに利用。
　
・木
　親オブジェクト（但し幹は除く）にRigidbodyを設定。
　IskinematicをTrueにしている。
　輪はProBuilderで用意したTorusを利用し、MeshColiderを設定。
　輪の中の葉はCapsulecoliderを設定。

・輪の回転
　輪はupdate関数内で角度を直接指定して回転している。
　6秒で1回転の速度としている。
　※12秒毎に逆回転にする予定。

・輪の上下
　輪の上下はボタンに従い上下移動する。
　押されていると1上昇,押されていないと1下降する。
　可動域は1にしているので、1秒押され続けると最大値に達する。

・猿と木の結合処理
　猿の腕と木の輪の接触数が1だと、猿を木の子オブジェクトにする。
　子オブジェクトにしている際は猿のIskinematicをTrueにしている。
　接触数が0の際は、猿を木の子オブジェクトではなくしている。
　接触数が2の際は、以下のルールに従う(3以上はありえない)
　
・木間の猿の移動ルール
 　①猿が操作木の子オブジェクトで、操作木を下ろす場合
 　②猿が操作木の子オブジェクトで、操作木を上げる場合
 　③猿が中央木の子オブジェクトで、操作木を下ろす場合
 　④猿が中央木の子オブジェクトで、操作木を上げる場合
 　
 　①と④の場合、猿を移動させる。
 　②と③の場合、猿を弾き飛ばす。
 　※高さが上の木から下の木の場合、猿を移動させる。逆の場合、猿を弾き飛ばす。
 　
前提メモ
 useGravity:物理に従う場合は、重力の影響を受ける。
 isKinematic：物理による移動を行わない。
 但し、スクリプトによる位置や回転度の変更は受け付ける。
 
問題点メモ
 結合状態の猿が、別の木の輪を通過してしまうことがある。
 これは・・・
 
